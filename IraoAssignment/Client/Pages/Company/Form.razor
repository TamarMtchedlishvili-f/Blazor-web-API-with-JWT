@using Microsoft.AspNetCore.Components
@using System.Net
@using IraoAssignment.Shared

<EditForm Model="@Company" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label>Id :</label>
        <div>
            <InputNumber @bind-Value="@Company.Id"/>
            <ValidationMessage For="@(() => Company.Id)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Company Name :</label>
        <div>
            <InputText @bind-Value="@Company.CompanyName"/>
            <ValidationMessage For="@(() => Company.CompanyName)"/>
        </div>
    </div>
    <div class="form-group ">
            <div>
                <label>Market Name :</label>
                <div>
                    <RadzenDropDown AllowClear="true" TValue="string" Style="width:300px" 
                                                    Data="@(Market?.Select(m => m.MarketName).Distinct())"
                                                    Change=@(args => OnChange(args, "DropDown")) />
                </div>
            </div>
        </div> @* <RadzenDropDown TValue="string" @bind-Value="Id" Placeholder="Select Market" AllowFiltering="true" Data="@(markets)" TextProperty="MarketName" ValueProperty="Id" Style="margin-bottom: 20px" /> *@

     @*<div class="form-group "> 
         <div> 
             <label>Market Name :</label> 
             <div> 
                 <InputText @bind-Value="@Company.CompanyName"/> 
                 <ValidationMessage For="@(() => Company.CompanyName)"/> 
             </div> 
         </div> 
    </div> *@

   @* <button type="submit" class="btn btn-success">
        @ButtonText
    </button>*@

</EditForm>


@code {

    [Parameter]
    public Company Company { get; set; }

    [Parameter]
    public IEnumerable<Market> Market { get; set; }

    [Parameter]
    public string ButtonText { get; set; } = "Save";

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
    

    void OnChange(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

        // console.Log($"{name} value changed to {str}");
    }

}